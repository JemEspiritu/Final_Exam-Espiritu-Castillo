# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pi0MJbXTEnxGi5mh5YLslt706KOb7RB5
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image, ImageOps
from tensorflow.keras.preprocessing.image import img_to_array
from keras.models import load_model

@st.cache_resource
def load_fashion_model():
    model = tf.keras.models.load_model('saved_fashion.h5')
    return model

def import_and_predict(image_data, model):
    size = (28, 28)
    # Convert image to grayscale and resize
    image = ImageOps.grayscale(ImageOps.fit(image_data, size, Image.ANTIALIAS))
    img = np.asarray(image)
    img = img / 255.0  # Normalize
    img_reshape = img[np.newaxis, ..., np.newaxis]  # Add batch and channel dimensions
    prediction = model.predict(img_reshape)
    return prediction

# Load the model once
model = load_fashion_model()

# Streamlit UI
st.write("# Fashion Dataset by Espiritu_Santos")
file = st.file_uploader("Choose a photo from your computer", type=["jpg", "png"])

if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)

    # Perform prediction
    prediction = import_and_predict(image, model)

    class_names = ['T-shirt', 'Top', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle Boot']
    result_class = np.argmax(prediction)
    result_label = class_names[result_class]
    confidence = prediction[0][result_class]

    st.success(f"Prediction: {result_label} ({confidence:.2%} confidence)")
